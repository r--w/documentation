openapi: 3.1.0
info:
  version: 1.7.10
  title: Coinpaprika API
  license:
    name: MIT
    url: https://coinpaprika.com/terms-of-use
  x-logo:
    url: https://coinpaprika.com/assets/img/API_logo_coinpage_1.svg
    backgroundColor: '#FAFAFA'
  description: |
    Coinpaprika API delivers precise & frequently updated market data from the world of crypto: coin prices, volumes, market caps, ATHs, return rates and more.

    # Introduction
    If you want to use the Coinpaprika API, you have two main options: you can choose the API Free plan, which has sufficient limits for hobby and non-commercial use, or get one of the paid plans, ideal for commercial or professional use. To decide which plan is the best for you, check the [Plans and Pricing comparison](https://coinpaprika.com/api).

    Depending on the selected plan, you should send requests to the appropriate base URL:

    | Plan       | Base URL                            |
    |------------|-------------------------------------|
    | Free       | https://api.coinpaprika.com/v1/     |
    | Starter    | https://api-pro.coinpaprika.com/v1/ |
    | Pro        | https://api-pro.coinpaprika.com/v1/ |
    | Business   | https://api-pro.coinpaprika.com/v1/ |
    | Enterprise | https://api-pro.coinpaprika.com/v1/ |

    # Authentication
    If you use the Free plan, you don't need to set up an API key for each request. For other plans it is required. You can generate the API key in the Developer Portal after signing in.

    To provide the API key in REST API calls, set the `Authorization` header:
    ```
    Authorization: <api-key>
    ```

    # Standards and conventions
    ## General

    * All endpoints return either a JSON object or array
    * All timestamp related fields are in seconds

    ## Errors
    * API errors are formatted as JSON:
    ```{"error": "<error message>"}```
    * The API uses standard HTTP status codes to indicate a request failure:
      * HTTP 4XX return codes are used for invalid requests - the issue is on the sender's side
      * HTTP 5XX return codes are used for internal errors - the issue is on the server's side

      | HTTP Status | Description |
      |---|---|
      | 400 Bad Request | The server could not process the request due to invalid request parameters or invalid format of the parameters. |
      | 402 Payment Required | The request could not be processed because of the user has an insufficient plan. If you want to be able to process this request, get a [higher plan](https://coinpaprika.com/api). |
      | 403 Forbidden | The request could not be processed due to invalid API key. |
      | 404 Not Found | The server could not process the request due to invalid URL or invalid path parameter. |
      | 429 Too Many Requests | The rate limit has been exceeded. Reduce the frequency of requests to avoid this error. |
      | 500 Internal Server Error | An unexpected server error has occured. |
      

    # Rate limit
    * The monthly number of requests is limited depending on the plan:
      | Plan       | Calls/month                         |
      |------------|-------------------------------------|
      | Free       | 20 000 |
      | Starter    | 200 000 |
      | Pro        | 500 000 |
      | Business   | 3 000 000 |
      | Enterprise | No limits |

    # API Clients
    We provide the API clients in several popular programming languages:
    * [PHP](https://github.com/coinpaprika/coinpaprika-api-php-client)
    * [NodeJS](https://github.com/coinpaprika/coinpaprika-api-nodejs-client)
    * [GO](https://github.com/coinpaprika/coinpaprika-api-go-client)
    * [Swift](https://github.com/coinpaprika/coinpaprika-api-swift-client)
    * [Kotlin](https://github.com/coinpaprika/coinpaprika-api-kotlin-client)
    * [Python](https://github.com/coinpaprika/coinpaprika-api-python-client)
    * [Google Sheets](https://github.com/coinpaprika/coinpaprika-google-sheet)
    * Community Contributed Clients:
      * [Rust](https://github.com/tokenomia-pro/coinpaprika-api-rust-client) built by <a href="https://tokenomia.pro/" target="_blank">tokenomia.pro</a>
      * [C#](https://github.com/MSiccDev/CoinpaprikaAPI)
      * [JS](https://github.com/jaggedsoft/coinpaprika-js)

    **Note**: some of them may not be updated yet. We are working on improving them and they will be updated soon. If you'd like to contribute, please report issues and send PRs on Github.


    # Terms of use
    * [Download terms of use](https://coinpaprika.github.io/files/terms_of_use_v1.pdf)
    # Archival documentations
    * [API v1.2](https://api.coinpaprika.com/docs/1.2)
    * [API v1.3](https://api.coinpaprika.com/docs/1.3)
    * [API v1.4](https://api.coinpaprika.com/docs/1.4)
    * [API v1.5](https://api.coinpaprika.com/docs/1.5)
    * [API v1.6](https://api.coinpaprika.com/docs/1.6)
    # Version history
    ## 1.7.10 - 2025.04.14
    * Added `5m` interval for historical OHLCV endpoint
    ## 1.7.9 - 2024.12.18
    * API mappings endpoint documentation
    ## 1.7.8 - 2024.01.24
    * Plan limits update
    ## 1.7.7 - 2023.06.07
    * Added official Python client link
    ## v1.7.6 - 2023.04.12
    * New intervals for OHLCV endpoint
    ## v1.7.5 - 2022.12.07
    * Removed documentation for /beta/ endpoints
    ## v1.7.4 - 2022.09.19
    * Key info endpoint
    * Coin logo image URL
    ## v1.7.3 - 2022.09.08
    * Plans update
    ## v1.7.2 - 2022.07.22
    * Changelog endpoint documentation
    ## v1.7.1 - 2022.07.14
    * Beta endpoints documentation
    ## v1.7.0 - 2022.05.06
    * API-Pro documentation
    ## v1.6.1 - 2020.12.09
    * Added information about first date with price data for currency ticker [/tickers](#operation/getTickers) and [/tickers/{coin_id}](#operation/getTickersById)
    * Added redirect for historical tickers by contract address [/contracts/{platform_id}/{contract_address}/historical](#operation/getHistoricalTicker)
    ## v1.6.0 - 2020.10.27
    * Added contracts section [/contracts](#operation/getPlatforms), [/contracts/{platform_id}](#operation/getContracts),
    [/contracts/{platform_id}/{contract_address}](#operation/getTicker)
servers:
  - url: https://api.coinpaprika.com/v1
tags:
  - name: Key
    description: API key related operations
  - name: Global
    description: Global market data
  - name: Coins
    description: Coin-related data
  - name: People
    description: People related to cryptocurrencies
  - name: Tags
    description: Cryptocurrency tags
  - name: Tickers
    description: Cryptocurrency tickers
  - name: Exchanges
    description: Cryptocurrency exchanges
  - name: Tools
    description: Various tools
  - name: Contracts
    description: Contract-related data
  - name: Changelog
    description: API changelog
  - name: Deprecated
    description: Deprecated endpoints
paths:
  /key/info:
    get:
      summary: Get API key info
      operationId: getKeyInfo
      description: |
        Returns API key information:
        * Name of the API key plan
        * When the plan started
        * A flag indicating if the plan is active
        * Link to the API user portal
        * Monthly usage

        **Available on the following API plans:**
        - Starter
        - Pro
        - Business
        - Enterprise

        **Update interval:** Every 1 minute.
      tags:
        - Key
      security:
        - APIKeyAuth: []
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url https://api-pro.coinpaprika.com/v1/key/info \
            --header 'Authorization: <api-key>'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/info'
        '403':
          description: The request could not be processed due to invalid API key
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /global:
    get:
      summary: Get market overview data
      operationId: getGlobal
      description: |
        Returns current cryptocurrencies market overview metrics, such as:
        * Global market capitalization
        * Total 24h volume of all cryptocurrencies
        * Number of active cryptocurrencies on coinpaprika.com
        * ATH of 24h volume and market capitalization
        * and more

        **Available on the following API plans:**
        - Free
        - Starter
        - Pro
        - Business
        - Enterprise

        **Update interval:** Every 5 minute.
      tags:
        - Global
      security: []
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/global'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/global'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /coins:
    get:
      summary: List coins
      operationId: getCoins
      description: |
        Returns basic information about cryptocurrencies on coinpaprika.com:
        * identity (`id`, `name`, `symbol`)
        * ranking (`rank`)
        * activity status (`is_active`)
        * type of cryptocurrency (`type`) - `coin` or `token`
        * information whether the currency is new (`is_new`) - true if the currency was added within the last 5 days

        **Available on the following API plans:**
        - Free
        - Starter
        - Pro
        - Business
        - Enterprise

        **Update interval:** Every 1 minute.
      tags:
        - Coins
      security: []
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/coins'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/currency'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /coins/{coin_id}:
    get:
      summary: Get coin by ID
      operationId: getCoinById
      description: |
        Returns detailed descriptive information about a single coin, without price or volume data. For price data, check the [/tickers](#operation/getTickers) and [/tickers/{coin_id}](#operation/getTickersById) endpoints.

        **Available on the following API plans:**
        - Free
        - Starter
        - Pro
        - Business
        - Enterprise

        **Update interval:** Every 1 minute.
      parameters:
        - $ref: '#/components/parameters/coin_id'
      tags:
        - Coins
      security: []
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/coins/btc-bitcoin'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coin_extended'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idNotFoundError'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /coins/mappings:
    get:
      summary: API ID mappings
      operationId: getMappings
      description: |
        The API ID Mappings endpoint allows you to map IDs from other cryptocurrency API providers to Coinpaprika API IDs. This is especially useful when you have provider-specific IDs and want to interact with the Coinpaprika API using its own standardized IDs. In addition to Coinpaprika's and other providers internal ID system, this endpoint also supports mapping [ISIN(International Securities Identification Number)](https://www.isin.org/isin-for-cryptocurrency/) and [DTI (Digital Token Identifier)](https://www.iso.org/obp/ui/en/#iso:std:iso:24165:-2:ed-1:v1:en) IDs.

        **Use Cases:**
          - Map your existing provider IDs (including ISIN and DTI) to Coinpaprika IDs
          - Retrieve other provider IDs (and ISIN, DTI) corresponding to a given Coinpaprika ID
          - Easily integrate and standardize data across different platforms with varying ID systems

        This flexibility enables seamless integration across different crypto data sources and allows you to work with a variety of ID formats within the Coinpaprika ecosystem.

        **Available mapping providers**
          - Coinpaprika
          - Coinmarketcap
          - Coingecko
          - Cryptocompare
          - [ISIN](https://www.isin.org/isin-for-cryptocurrency/)
          - [DTI](https://www.iso.org/obp/ui/en/#iso:std:iso:24165:-2:ed-1:v1:en)

        **Available on the following API plans:**
        - Business
        - Enterprise

        **Examples:**

        Use a single query parameter to get mappings for a specific Coinpaprika, Coinmarketcap, Coingecko, Cryptocompare, ISIN, or DTI ID. The response will include all available mappings for the specified ID.

        ```shell
        # Get mappings for a specific Coinpaprika ID
        curl --request GET \
            --url 'https://api-pro.coinpaprika.com/v1/coins/mappings?coinpaprika=btc-bitcoin' \
            --header 'Authorization: <your-api-key>'
          
        # Get mappings for a specific Coinmarketcap ID
        curl --request GET \
            --url 'https://api-pro.coinpaprika.com/v1/coins/mappings?coinmarketcap=1' \
            --header 'Authorization: <your-api-key>'\
          
        # Get mappings for a specific Coingecko ID
        curl --request GET \
            --url 'https://api-pro.coinpaprika.com/v1/coins/mappings?coingecko=bitcoin' \
            --header 'Authorization: <your-api-key>'
          
        # Get mappings for a specific Cryptocompare ID
        curl --request GET \
            --url 'https://api-pro.coinpaprika.com/v1/coins/mappings?cryptocompare=1' \
            --header 'Authorization: <your-api-key>'
          
        # Get mappings for a specific ISIN ID
        curl --request GET \
            --url 'https://api-pro.coinpaprika.com/v1/coins/mappings?isin=XTV15WLZJMF0' \
            --header 'Authorization: <your-api-key>'
                       
        # Get mappings for a specific DTI ID
        curl --request GET \
            --url 'https://api-pro.coinpaprika.com/v1/coins/mappings?dti=V15WLZJMF' \
            --header 'Authorization: <your-api-key>'
        ```

        **Update interval:** Every 1 minute.
      parameters:
        - $ref: '#/components/parameters/coinpaprika_id'
        - $ref: '#/components/parameters/coinmarketcap_id'
        - $ref: '#/components/parameters/coingecko_id'
        - $ref: '#/components/parameters/cryptocompare_id'
        - $ref: '#/components/parameters/isin_id'
        - $ref: '#/components/parameters/dti_id'
      tags:
        - Coins
      security:
        - APIKeyAuth: []
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api-pro.coinpaprika.com/v1/coins/mappings?coinpaprika=btc-bitcoin' \
            --header 'Authorization: <your-api-key>'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api_mappings'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /coins/{coin_id}/twitter:
    get:
      summary: Get Twitter timeline tweets for a coin
      operationId: getCoinTwitter
      description: |
        Returns the last 50 timeline tweets from the official Twitter profile for a given coin.

        **Available on the following API plans:**
        - Free
        - Starter
        - Pro
        - Business
        - Enterprise

        **Update interval:** Every 5 minutes.
      parameters:
        - $ref: '#/components/parameters/coin_id'
      tags:
        - Coins
      security: []
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/coins/btc-bitcoin/twitter'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/twitter'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idNotFoundError'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /coins/{coin_id}/events:
    get:
      summary: Get coin events by coin ID
      operationId: getCoinEvents
      description: |
        Returns events for a given coin.

        **Available on the following API plans:**
        - Free
        - Starter
        - Pro
        - Business
        - Enterprise

        **Update interval:** Every 5 minutes.
      parameters:
        - $ref: '#/components/parameters/coin_id'
      tags:
        - Coins
      security: []
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/coins/btc-bitcoin/events'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/event'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idNotFoundError'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /coins/{coin_id}/exchanges:
    get:
      summary: Get exchanges by coin ID
      operationId: getCoinExchanges
      description: |
        Returns exchanges where a given coin is traded.

        **Available on the following API plans:**
        - Free
        - Starter
        - Pro
        - Business
        - Enterprise

        **Update interval:** Every 1 minute.
      parameters:
        - $ref: '#/components/parameters/coin_id'
      tags:
        - Coins
      security: []
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/coins/btc-bitcoin/exchanges'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/exchange_with_share'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idNotFoundError'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /coins/{coin_id}/markets:
    get:
      summary: Get markets by coin ID
      operationId: getCoinMarkets
      description: |
        Returns all available markets for a given coin.

        **Available on the following API plans:**
        - Free
        - Starter
        - Pro
        - Business
        - Enterprise

        **Update interval:** Every 1 minute.
      parameters:
        - $ref: '#/components/parameters/coin_id'
        - $ref: '#/components/parameters/quotes'
      tags:
        - Coins
      security: []
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/coins/btc-bitcoin/markets'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/coin_market'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idNotFoundError'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /coins/{coin_id}/ohlcv/latest:
    get:
      summary: Get OHLC for the last full day
      operationId: getCoinOHLCVLatest
      description: |
        Returns Open/High/Low/Close values with volume and market capitalization for the last full day.

        **Available on the following API plans:**
        - Free
        - Starter
        - Pro
        - Business
        - Enterprise

        **Update interval:** Every 1 day.
      parameters:
        - $ref: '#/components/parameters/coin_id'
        - $ref: '#/components/parameters/ohlcv_quote'
      tags:
        - Coins
      security: []
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/coins/btc-bitcoin/ohlcv/latest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/coins_ohlcv'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idNotFoundError'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /coins/{coin_id}/ohlcv/historical:
    get:
      summary: Get historical OHLC
      operationId: getCoinOHLCVHistorical
      description: |
        Returns Open/High/Low/Close values with volume and market capitalization for any date range. If the `end` date is the current day, data can change with every request until actual close of the day at 23:59:59"

        **Available on the following API plans:**
        - Free
        - Starter
        - Pro
        - Business
        - Enterprise

        **Maximum time range of data available to fetch depending on the plan:**

        | Plan       | Time range                         |
        |------------|-------------------------------------|
        | Free       | Last 24 hours |
        | Starter    | Last 30 days |
        | Pro        | Last 90 days |
        | Business   | Last 365 days |
        | Enterprise | No limits |

        **The default interval of returned data for OHLCV is 24 hours:**
        ```
        [
          {
            "time_open": "2020-01-01T00:00:00Z",
            "time_close": "2020-01-01T23:59:59Z",
            "open": ...,
            "high": ...,
            "low": ...,
            "close": ...,
            "volume": ...,
            "market_cap": ...
          }
          ...
        ]
        ```

        **However, depending on your API plan, you can set a smaller interval by using the query parameter `interval`:**

        | Plan       | `interval` parameter value          |
        |------------|-------------------------------------|
        | Free       | `24h` |
        | Starter    | `24h` |
        | Pro        | `24h` |
        | Business   | `1h`, `6h`, `12h`, `24h` |
        | Enterprise | `5m`, `15m`, `30m`, `1h`, `6h`, `12h`, `24h` |

        **Update interval:** Every 5 minute.
      parameters:
        - $ref: '#/components/parameters/coin_id'
        - $ref: '#/components/parameters/ohlcv_start'
        - $ref: '#/components/parameters/ohlcv_end'
        - $ref: '#/components/parameters/ohlcv_limit'
        - $ref: '#/components/parameters/ohlcv_interval'
        - $ref: '#/components/parameters/ohlcv_quote'
      tags:
        - Coins
      security: []
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/coins/btc-bitcoin/ohlcv/historical?start=2019-01-01&end=2019-01-20'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/coins_ohlcv'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idNotFoundError'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /coins/{coin_id}/ohlcv/today:
    get:
      summary: Get today OHLC
      operationId: getCoinOHLCVToday
      description: |
        Returns Open/High/Low/Close values with volume and market capitalization for the current day. Data can change every each request until actual close of the day at 23:59:59.

        **Available on the following API plans:**
        - Free
        - Starter
        - Pro
        - Business
        - Enterprise

        **Update interval:** Every 5 minute.
      parameters:
        - $ref: '#/components/parameters/coin_id'
        - $ref: '#/components/parameters/ohlcv_quote'
      tags:
        - Coins
      security: []
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/coins/btc-bitcoin/ohlcv/today'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/coins_ohlcv'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idNotFoundError'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /people/{person_id}:
    get:
      summary: Get person by ID
      description: |
        Returns information about a person with the specified ID, related to the cryptocurrency market. Using this endpoint you can get a description of the person, social media links, number of teams she or he is involved in and the positions in those teams. 

        **Available on the following API plans:**
        - Free
        - Starter
        - Pro
        - Business
        - Enterprise

        **Update interval:** Every 1 hour.
      operationId: getPeopleById
      parameters:
        - $ref: '#/components/parameters/person_id'
      tags:
        - People
      security: []
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/people/vitalik-buterin'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/person_by_id'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idNotFoundError'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /tags:
    get:
      summary: List tags
      operationId: getTags
      description: |
        Returns basic information about cryptocurrencies tags (categories):
        * name
        * description
        * type of tag: `technical` or `functional`
        * number of coins with the tag
        * number of ICOs with the tag

        **Available on the following API plans:**
        - Free
        - Starter
        - Pro
        - Business
        - Enterprise

        **Update interval:** Every 1 hour.
      tags:
        - Tags
      security: []
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/tags'
      parameters:
        - $ref: '#/components/parameters/additional_fields'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tag'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /tags/{tag_id}:
    get:
      summary: Get tag by ID
      operationId: getTagById
      description: |
        Returns information about a given cryptocurrency tag:
        * name
        * description
        * type of tag: `technical` or `functional`
        * number of coins with the tag
        * number of ICOs with the tag

        **Available on the following API plans:**
        - Free
        - Starter
        - Pro
        - Business
        - Enterprise

        **Update interval:** Every 1 hour.
      tags:
        - Tags
      security: []
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/tags/blockchain-service'
      parameters:
        - $ref: '#/components/parameters/tag_id'
        - $ref: '#/components/parameters/additional_fields'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idNotFoundError'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /tickers:
    get:
      tags:
        - Tickers
      security: []
      summary: Get tickers for all active coins
      description: |
        Returns price data of all active cryptocurrencies on coinpaprika.com:
        * identity (`id`, `name`, `symbol`)
        * ranking (`rank`)
        * supplies (`circulating_supply`, `total_supply`, `max_supply`)
        * [beta coefficient](https://www.investopedia.com/terms/b/beta.asp) (`beta_value`)
        * price data in a given currency (price, volumes, market cap, price changes, ath)

        **Available on the following API plans:**
        - Free - there is no `circulating supply` field in the Free plan. If you need this field, use another API plan.
        - Starter
        - Pro
        - Business
        - Enterprise

        **Maximum number of assets returned depending on the selected API plan:**

        | Plan       | Assets                         |
        |------------|-------------------------------------|
        | Free       | 2000 |
        | Starter    | No limits |
        | Pro        | No limits |
        | Business   | No limits |
        | Enterprise | No limits |

        **Update interval:** 
        - 3 minutes for Starter, Pro, Business, Enterprise plans
        - On average 5 minutes for Free
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/tickers'
      operationId: getTickers
      parameters:
        - $ref: '#/components/parameters/tickers_quotes'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tick'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /tickers/{coin_id}:
    get:
      tags:
        - Tickers
      security: []
      summary: Get ticker for a specific coin
      description: |
        Returns price data of a single cryptocurrency on coinpaprika.com:
        * identity (`id`, `name`, `symbol`)
        * ranking (`rank`)
        * supplies (`circulating_supply`, `total_supply`, `max_supply`)
        * [beta coefficient](https://www.investopedia.com/terms/b/beta.asp) (`beta_value`)
        * price data in a given currency (price, volumes, market cap, price changes, ath)

        **Available on the following API plans:**
        - Free - there is no `circulating supply` field in the Free plan. If you need this field, use another API plan.
        - Starter
        - Pro
        - Business
        - Enterprise

        **Update interval:** 
        - 3 minutes for Starter, Pro, Business, Enterprise plans
        - On average 5 minutes for Free
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/tickers/btc-bitcoin'
      operationId: getTickersById
      parameters:
        - $ref: '#/components/parameters/coin_id'
        - $ref: '#/components/parameters/tickers_quotes'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tick'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idNotFoundError'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /tickers/{coin_id}/historical:
    get:
      tags:
        - Tickers
      security: []
      summary: Get historical ticks for a specific coin
      description: |
        Returns historical values of `price`, `volume_24h`, `market_cap` for a given cryptocurrency on coinpaprika.com:

        **Available history range depending on the selected API plan:**

        | Interval | `interval` param values | Free | Starter | Pro | Business | Enterprise |
        |---|---|---|---|---|---|---|
        | Daily | `24h`, `1d`, `7d`, `14d`, `30d`, `90d`, `365d` | last 1 year | last 5 years | unlimited | unlimited | unlimited |
        | Hourly | `1h`, `2h`, `3h`, `6h`, `12h` | last 1 day | last 30 days | last 90 days | last 365 days | unlimited |
        | 5-minute | `5m`, `10m`, `15m`, `30m`, `45m` | none | last 7 days | last 30 days | last 365 days | unlimited |

        **Update interval:** Every 5 minutes.
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/tickers/btc-bitcoin/historical?start=2019-01-01&interval=1d'
      operationId: getTickersHistoricalById
      parameters:
        - $ref: '#/components/parameters/coin_id'
        - $ref: '#/components/parameters/historical_start'
        - $ref: '#/components/parameters/historical_end'
        - $ref: '#/components/parameters/historical_limit'
        - $ref: '#/components/parameters/historical_quote'
        - $ref: '#/components/parameters/historical_interval'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/historical_ticks'
        '400':
          description: invalid parameters
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idNotFoundError'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /exchanges:
    get:
      summary: List exchanges
      operationId: getExchanges
      parameters:
        - $ref: '#/components/parameters/quotes'
      tags:
        - Exchanges
      security: []
      description: |
        Returns basic information about exchanges on coinpaprika.com:
        * identity (`id`, `name`)
        * ranking
        * activity status
        * number of currencies, markets
        * volumes
        * etc.

        **Available on the following API plans:**
        - Free
        - Starter
        - Pro
        - Business
        - Enterprise

        **Update interval:** Every 1 minute.
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/exchanges'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/exchange'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /exchanges/{exchange_id}:
    get:
      summary: Get exchange by ID
      operationId: getExchangeByID
      parameters:
        - $ref: '#/components/parameters/quotes'
        - $ref: '#/components/parameters/exchange_id'
      tags:
        - Exchanges
      security: []
      description: |
        Returns basic information about a given exchange on coinpaprika.com:
        * identity (`id`, `name`)
        * ranking
        * activity status
        * number of currencies, markets
        * volumes
        * etc.

        **Available on the following API plans:**
        - Free
        - Starter
        - Pro
        - Business
        - Enterprise

        **Update interval:** Every 1 minute.
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/exchanges/binance'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exchange'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idNotFoundError'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /exchanges/{exchange_id}/markets:
    get:
      summary: List an exchange markets
      operationId: getExchangeMarkets
      parameters:
        - $ref: '#/components/parameters/quotes'
        - $ref: '#/components/parameters/exchange_id'
      tags:
        - Exchanges
      security: []
      description: |
        Returns list of all available markets on a given exchange on coinpaprika.com:
        * base, quote coin names/symbols, market url
        * market type
        * activity and outlier status
        * price and volume
        * etc.

        **Available on the following API plans:**
        - Free
        - Starter
        - Pro
        - Business
        - Enterprise

        **Update interval:** Every 1 minute.
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/exchanges/binance/markets'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/market'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idNotFoundError'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /contracts:
    get:
      summary: List contracts platforms
      description: |
        Returns all available contract platforms on coinpaprika.com.

        **Available on the following API plans:**
        - Free
        - Starter
        - Pro
        - Business
        - Enterprise

        **Update interval:** Every 1 minute.
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/contracts'
      operationId: getPlatforms
      tags:
        - Contracts
      security: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/platform'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /contracts/{platform_id}:
    get:
      summary: Get all contract addressess for a given platform
      description: |
        Returns all available contracts for a given platform on coinpaprika.com.

        **Available on the following API plans:**
        - Free
        - Starter
        - Pro
        - Business
        - Enterprise

        **Update interval:** Every 1 minute.
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/contracts/eth-ethereum'
      operationId: getContracts
      parameters:
        - $ref: '#/components/parameters/platform_id'
      tags:
        - Contracts
      security: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contracts_contract'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /contracts/{platform_id}/{contract_address}:
    get:
      summary: Redirect to Ticker by contract address
      description: |
        Returns [ticker](#operation/getTickersById) data for a contract with a given address.

        **Available on the following API plans:**
        - Free
        - Starter
        - Pro
        - Business
        - Enterprise

        **Update interval:** Every 5 minute.
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/contracts/eth-ethereum/0xd26114cd6ee289accf82350c8d8487fedb8a0c07'
      operationId: getTicker
      parameters:
        - $ref: '#/components/parameters/platform_id'
        - $ref: '#/components/parameters/contract_address'
      tags:
        - Contracts
      security: []
      responses:
        '200':
          description: successful operation
        '301':
          description: successful redirect
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /contracts/{platform_id}/{contract_address}/historical:
    get:
      summary: Redirect to historical ticks by contract address
      description: |
        Returns [historical ticks](#operation/getTickersHistoricalById) for a contract with a given address.

        **Check [historical ticks endpoint documentation](#operation/getTickersHistoricalById) to find out about the limitations for each API plan.**

        **Update interval:** Every 5 minute.
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/contracts/eth-ethereum/0xd26114cd6ee289accf82350c8d8487fedb8a0c07/historical?start=2019-01-01&interval=1d'
      operationId: getHistoricalTicker
      parameters:
        - $ref: '#/components/parameters/platform_id'
        - $ref: '#/components/parameters/contract_address'
        - $ref: '#/components/parameters/historical_start'
        - $ref: '#/components/parameters/historical_end'
        - $ref: '#/components/parameters/historical_limit'
        - $ref: '#/components/parameters/historical_quote'
        - $ref: '#/components/parameters/historical_interval'
      tags:
        - Contracts
      security: []
      responses:
        '200':
          description: successful operation
        '301':
          description: successful redirect
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /changelog/ids:
    get:
      tags:
        - Changelog
      summary: Get id changelog for all coins
      description: |
        Returns coin id changes made by coinpaprika.com moderators:
        * `currency_id` - current id of a coin
        * `old_id` - old coin id that has been replaced with a new one
        * `new_id` - new coin id that replaced the old one
        * `changed_at` - date of the change

        **Available on the following API plans:**
        - Starter
        - Pro
        - Business
        - Enterprise

        **Update interval:** Every 1 minute.
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api-pro.coinpaprika.com/v1/changelog/ids' \
            --header 'Authorization: <your-api-key>'
      operationId: getChangelogIDs
      parameters:
        - $ref: '#/components/parameters/page'
      security:
        - APIKeyAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ids_changelog'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /search:
    get:
      summary: Search
      operationId: search
      description: |
        Returns currencies, exchanges, icos, people, tags on coinpaprika.com for a given search query.

        **Available on the following API plans:**
        - Free
        - Starter
        - Pro
        - Business
        - Enterprise

        **Update interval:** Every 1 minute.
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/search?q=btc'
      tags:
        - Tools
      security: []
      parameters:
        - $ref: '#/components/parameters/search_query'
        - $ref: '#/components/parameters/search_category'
        - $ref: '#/components/parameters/search_modifier'
        - $ref: '#/components/parameters/search_limit'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/search_results'
        '400':
          description: invalid parameters
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /price-converter:
    get:
      summary: Price converter
      operationId: priceConverter
      description: |
        Converts a set amount of base currency to quote currency.

        **Available on the following API plans:**
        - Free
        - Starter
        - Pro
        - Business
        - Enterprise

        **Update interval:** Every 1 minute.
      x-codeSamples:
        - lang: cURL
          label: CLI
          source: |
            curl --request GET \
            --url 'https://api.coinpaprika.com/v1/price-converter?base_currency_id=btc-bitcoin&quote_currency_id=eth-ethereum&amount=1.2'
      tags:
        - Tools
      security: []
      parameters:
        - $ref: '#/components/parameters/converter_base_currency_id'
        - $ref: '#/components/parameters/converter_quote_currency_id'
        - $ref: '#/components/parameters/converter_amount'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/price_converter_response'
        '400':
          description: invalid parameters
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tooManyRequestsError'
  /ticker:
    get:
      tags:
        - Deprecated
      security: []
      summary: Get ticker information for all coins [DEPRECATED]
      operationId: getTickersDeprecated
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tick_deprecated'
        '429':
          description: too many requests
  /ticker/{coin_id}:
    get:
      tags:
        - Deprecated
      security: []
      summary: Get ticker by ID [DEPRECATED]
      operationId: getTickerByIdDeprecated
      parameters:
        - $ref: '#/components/parameters/coin_id'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tick_deprecated'
        '429':
          description: too many requests
components:
  securitySchemes:
    APIKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    current_month:
      type: object
      description: Requests made and left stats
      properties:
        requests_made:
          type: number
          example: 18
          description: Number of requests made in the current month. If a plan has no limit on the number of requests, e.g., `Enterprise` plan, then the value of `requests_made` is -1
        requests_left:
          type: number
          example: 499982
          description: Number of requests left in the  current month. If a plan has no limit on the number of requests, e.g., `Enterprise` plan, then the value of `requests_left` is -1
    usage:
      type: object
      description: Monthly usage for the API key
      properties:
        message:
          type: string
          example: limited plan
          description: '`limited plan` if the number of requests is limited in the current plan or `unlimited plan` if there is no limit on the number of requests'
        current_month:
          $ref: '#/components/schemas/current_month'
    info:
      type: object
      properties:
        plan:
          type: string
          example: pro
          description: Name of the API plan
        plan_started_at:
          type: string
          description: A date when the plan started in RFC3999 (ISO-8601) format
          example: '2022-09-16T10:17:24Z'
        plan_status:
          type: string
          example: active
          description: 'Status of the plan. There are 3 possible statuses: `active` - the subscription is active; `past_due` - the subscription payment failed. If payment is not made within 7 days, then the subscription will expire; `inactive` - the subscription is inactive.'
        portal_url:
          type: string
          example: https://coinpaprika.com/api/panel
          description: API Customer Portal URL
        usage:
          $ref: '#/components/schemas/usage'
    tooManyRequestsError:
      type: object
      properties:
        error:
          type: string
          example: you have reached maximum request limit
          description: Error description
    global:
      type: object
      properties:
        market_cap_usd:
          type: number
          example: 430252937008
          description: Total market capitalization - sum of all cryptocurrency market capitalizations in USD
        volume_24h_usd:
          type: number
          example: 430252937008
          description: Total 24h volume - sum of all cryptocurrency volumes in USD
        bitcoin_dominance_percentage:
          type: number
          example: 36.67
          description: Bitcoin market capitalization as a percentage of total market capitalization
        cryptocurrencies_number:
          type: integer
          example: 1587
          description: This is number of active cryptocurrencies on our site (active in this case means that we have up-to-date price data for a coin). Total number of our cryptocurrencies is higher and may be obtained via counting elements in /coins endpoint.
        market_cap_ath_value:
          type: number
          example: 835692000000
          description: ATH (All Time High) value of market capitalization - the highest historical value of marketcap
        market_cap_ath_date:
          type: string
          example: '2018-01-07T11:17:00Z'
          description: ATH (All Time High) date of market capitalization
        volume_24h_ath_value:
          type: number
          example: 71990500000
          description: ATH (All Time High) value of the 24h volume - the highest historical value of 24h volume
        volume_24h_ath_date:
          type: string
          example: '2018-01-04T17:17:00Z'
          description: ATH (All Time High) date of volume 24h
        market_cap_change_24h:
          type: number
          example: 1.98
          description: Percentage change in the market capitalization over the last 24h
        volume_24h_change_24h:
          type: number
          example: 1.98
          description: Percentage change in the volume 24h over the last 24h
        last_updated:
          type: integer
          example: 1525089441
          description: Timestamp of the last data update
    currency:
      type: object
      properties:
        id:
          type: string
          example: btc-bitcoin
          description: ID of coin on coinpaprika.com
        name:
          type: string
          example: Bitcoin
          description: Name of the cryptocurrency
        symbol:
          type: string
          example: BTC
          description: Symbol of the cryptocurrency
        rank:
          type: integer
          example: 1
          description: Current ranking of the cryptocurrency. If `is_active` is false the `rank` is 0
        is_new:
          type: boolean
          example: false
          description: Flag indicating if the currency was added within the last 5 days
        is_active:
          type: boolean
          example: true
          description: Flag indicating if the currency is active, which means that we can calculate the current price and volume
        type:
          type: string
          example: coin
          description: Type of the cryptocurrency. Currently supported values are `coin` and `token`
    coin_parent:
      type: object
      properties:
        id:
          type: string
          example: eth-ethereum
        name:
          type: string
          example: Ethereum
        symbol:
          type: string
          example: ETH
    tag_simplified:
      type: object
      properties:
        id:
          type: string
          example: blockchain-service
          description: ID of the tag
        name:
          type: string
          example: Blockchain Service
          description: Name of the tag
        coin_counter:
          type: integer
          example: 160
          description: Number of coins with this tag
        ico_counter:
          type: integer
          example: 80
          description: Number of ico projects with this tag
    person_with_position:
      type: object
      properties:
        id:
          type: string
          example: vitalik-buterin
        name:
          type: string
          example: Vitalik Buterin
        position:
          type: string
          example: Author
    contract:
      type: object
      properties:
        contract:
          type: string
          description: The contract identifier, which is usually its address
        platform:
          type: string
          description: ID of the contract platform. For Ethereum contracts it is `eth-ethereum`, for Tron `trx-tron`, etc.
        type:
          type: string
          description: 'Type of the contract. Currently supported values are: `ERC20`, `BEP2`, `TRC10`, `TRC20`, `Stellar Asset`, `Other`'
      required:
        - contract
        - platform
        - type
    coin_links:
      type: object
      properties:
        explorer:
          type: array
          items:
            type: string
          example:
            - http://blockchain.com/explorer
            - https://blockchair.com/bitcoin/blocks
            - https://blockexplorer.com/
            - https://live.blockcypher.com/btc/
          nullable: true
          description: List of links to blockchain explorers, if any
        facebook:
          type: array
          items:
            type: string
          example:
            - https://www.facebook.com/bitcoins/
          nullable: true
          description: List of links to Facebook pages of the cryptocurrency, if any
        reddit:
          type: array
          items:
            type: string
          example:
            - https://www.reddit.com/r/bitcoin
          nullable: true
          description: List of links to Reddit communities and profiles, if any
        source_code:
          type: array
          items:
            type: string
          example:
            - https://github.com/bitcoin/bitcoin
          nullable: true
          description: List of links to source code repositories, if any
        website:
          type: array
          items:
            type: string
          example:
            - https://bitcoin.org/
          nullable: true
          description: List of the cryptocurrency websites, if any
        youtube:
          type: array
          items:
            type: string
          example:
            - https://www.youtube.com/watch?v=Um63OQz3bjo
          nullable: true
          description: List of links to Youtube channels of the cryptocurrency, if any
        medium:
          type: array
          items:
            type: string
          example: null
          nullable: true
          description: List of links to Medium profiles of the cryptocurrency, if any
    link_extended:
      type: object
      properties:
        url:
          type: string
          description: The link URL
        type:
          type: string
          description: 'Type of the link: `website`, `reddit`, `source_code`, etc.'
        stats:
          type: object
          additionalProperties:
            type: number
          description: An object containing the link stats like `subscribers` (for reddit), `followers` (for twitter), `members` (for telegram), `stars`, `contributors` (for source code)
      required:
        - url
        - type
    whitepaper:
      type: object
      properties:
        link:
          type: string
          example: https://static.coinpaprika.com/storage/cdn/whitepapers/215.pdf
          description: The whitepaper URL
        thumbnail:
          type: string
          example: https://static.coinpaprika.com/storage/cdn/whitepapers/217.jpg
          description: Link to the whitepaper thumbnail
    coin_extended:
      type: object
      properties:
        id:
          type: string
          example: btc-bitcoin
          description: ID of coin on coinpaprika.com
        name:
          type: string
          example: Bitcoin
          description: Name of the cryptocurrency
        symbol:
          type: string
          example: BTC
          description: Symbol of the cryptocurrency
        parent:
          $ref: '#/components/schemas/coin_parent'
          example:
            id: eth-ethereum
            name: Ethereum
            symbol: ETH
          nullable: true
          description: This field is deprecated. Use `contracts` field instead
        rank:
          type: integer
          example: 1
          description: Current coin ranking position on coinpaprika.com
        is_new:
          type: boolean
          example: false
          description: Flag indicating if the currency was added within the last 5 days
        is_active:
          type: boolean
          example: true
          description: Flag indicating if the currency is active, which means that we can calculate the current price and volume
        type:
          type: string
          example: coin
          description: Type of the cryptocurrency. Currently supported values are `coin` and `token`
        logo:
          type: string
          example: https://static.coinpaprika.com/coin/bnb-binance-coin/logo.png
          description: Logo image URL
        tags:
          type: array
          items:
            $ref: '#/components/schemas/tag_simplified'
          description: The array of tags to which this coin was assigned on coinpaprika.com
        team:
          type: array
          items:
            $ref: '#/components/schemas/person_with_position'
          description: The cryptocurrency founding and/or developing team
        description:
          type: string
          example: Bitcoin is a cryptocurrency and worldwide payment system. It is the first decentralized digital currency, as the system works without a central bank or single administrator.
          nullable: true
          description: Text description of the cryptocurrency
        message:
          type: string
          description: An important message about current status of the cryptocurrency
        open_source:
          type: boolean
          example: true
          description: Set to true if the cryptocurrency is Open Source project
        hardware_wallet:
          type: boolean
          example: true
          description: Set to true if the cryptocurrency is supported by any hardware wallet
        started_at:
          type: string
          example: '2009-01-03T00:00:00Z'
          nullable: true
          description: Launch date of the cryptocurrency
        development_status:
          type: string
          example: Working product
          nullable: true
          description: Development status of the cryptocurrency - if it is a working project, beta version, just an idea, etc.
        proof_type:
          type: string
          example: Proof of work
          nullable: true
          description: 'Cryptocurrency proof type: Proof of Work, Proof of Stake, etc.'
        org_structure:
          type: string
          example: Decentralized
          nullable: true
          description: 'The cryptocurrency organization structure: centralized, decentralized, hierarchical, flat, etc.'
        hash_algorithm:
          type: string
          example: SHA256
          nullable: true
          description: Name of the hash algorithm used by the cryptocurrency
        contract:
          type: string
          nullable: true
          description: This field is deprecated. Use `contracts` field instead
        platform:
          type: string
          nullable: true
          description: This field is deprecated. Use `contracts` field instead
        contracts:
          type: array
          items:
            $ref: '#/components/schemas/contract'
        links:
          $ref: '#/components/schemas/coin_links'
        links_extended:
          type: array
          items:
            $ref: '#/components/schemas/link_extended'
          example:
            - url: http://blockchain.com/explorer
              type: explorer
            - url: https://www.reddit.com/r/bitcoin
              type: reddit
              stats:
                subscribers: 1009135
            - url: https://github.com/bitcoin/bitcoin
              type: source_code
              stats:
                contributors: 730
                stars: 36613
            - url: https://bitcoin.org/
              type: website
          description: Contains all links of the `{coin_id}` coin together with statistics for some of them, e.g. number of twitter followers, reddit subscribers, telegram members or github repository stars and contributors
        whitepaper:
          $ref: '#/components/schemas/whitepaper'
        first_data_at:
          type: string
          description: Date of the first available ticker data for the coin. RFC3999 (ISO-8601) format
          example: '2018-10-03T11:48:19Z'
        last_data_at:
          type: string
          description: Date of the last available ticker data for the coin. RFC3999 (ISO-8601) format
          example: '2019-05-03T11:00:00'
    idNotFoundError:
      type: object
      properties:
        error:
          type: string
          example: id not found
          description: ID not found error message
    api_mappings:
      type: object
      properties:
        coinpaprika:
          type: string
          example: btc-bitcoin
          description: ID of coin on coinpaprika.com
        coinmarketcap:
          type: string
          example: '1'
          description: ID of coin on coinmarketcap.com
        coingecko:
          type: string
          example: bitcoin
          description: ID of coin on coingecko.com
        cryptocompare:
          type: string
          example: '1'
          description: ID of coin on cryptocompare.com
        isin:
          type: string
          example: XTV15WLZJMF0
          description: ISIN (International Securities Identification Number) of the coin
        dti:
          type: string
          example: V15WLZJMF
          description: Digital Token Identifier of the coin
        updated_at:
          type: string
          description: Date of the last update of the mappings. RFC3999 (ISO-8601) format
          example: '2024-12-12T13:13:28Z'
    twitter:
      type: object
      properties:
        date:
          type: string
          description: Publish date of the tweet. RFC3999 (ISO-8601) format
          example: '2018-10-03T11:48:19Z'
        user_name:
          type: string
          description: Twitter profile user name
          example: bitcoincoreorg
        user_image_link:
          type: string
          description: Twitter profile user image URL
        status:
          type: string
          description: Tweet content
          example: Bitcoin Core 0.17.0 Released https://t.co/ciwCREngon
        is_retweet:
          type: boolean
          description: Flag indicating whether it is a retweet of someone else's tweet
          example: false
        retweet_count:
          type: integer
          description: Number of retweets of this tweet
        like_count:
          type: integer
          description: Number of likes of this tweet
        status_link:
          type: string
          description: Tweet URL
        status_id:
          type: string
          description: Tweet ID
        media_link:
          type: string
          description: 'Link to this tweet media: image, video, etc.'
          nullable: true
        youtube_link:
          type: string
          description: Link to Youtube video shared in this tweet
          nullable: true
    event:
      type: object
      properties:
        id:
          type: string
          example: 17398-cme-april-first-trade
        date:
          type: string
          example: '2018-04-02T00:00:00Z'
        date_to:
          type: string
          nullable: true
        name:
          type: string
          example: 'CME: April First Trade'
        description:
          type: string
          example: First trade of Bitcoin futures contract for April 2018.
        is_conference:
          type: boolean
          example: false
        link:
          type: string
          example: http://www.cmegroup.com/trading/equity-index/us-index/bitcoin_product_calendar_futures.html
          nullable: true
        proof_image_link:
          type: string
          example: https://static.coinpaprika.com/storage/cdn/event_images/16635.jpg
          nullable: true
    exchange_fiat:
      type: object
      properties:
        name:
          type: string
          example: US Dollars
        symbol:
          type: string
          example: USD
    exchange_with_share:
      type: object
      properties:
        id:
          type: string
          example: binance
        name:
          type: string
          example: Binance
        fiats:
          type: array
          items:
            $ref: '#/components/schemas/exchange_fiat'
          example:
            - name: US Dollars
              symbol: USD
        adjusted_volume_24h_share:
          type: number
          example: 11.26
    market_quote:
      type: object
      properties:
        price:
          type: number
          example: 4582.6967796728
        volume_24h:
          type: number
          example: 229658776.19514218
    market_quotes:
      type: object
      properties:
        $KEY:
          $ref: '#/components/schemas/market_quote'
    coin_market:
      type: object
      properties:
        exchange_id:
          type: string
          example: binance
        exchange_name:
          type: string
          example: Binance
        pair:
          type: string
          example: BTC/USDT
        base_currency_id:
          type: string
          example: btc-bitcoin
        base_currency_name:
          type: string
          example: Bitcoin
        quote_currency_id:
          type: string
          example: usdt-tether
        quote_currency_name:
          type: string
          example: Tether
        market_url:
          type: string
          example: https://www.binance.com/en/trade/BTC_USDT
        category:
          type: string
          example: Spot
        fee_type:
          type: string
          example: Percentage
        outlier:
          type: boolean
          example: false
        adjusted_volume_24h_share:
          type: number
          example: 30.29
        quotes:
          $ref: '#/components/schemas/market_quotes'
        last_updated:
          type: string
          example: '2018-11-14T07:20:41Z'
    coins_ohlcv:
      type: object
      properties:
        time_open:
          type: string
          description: RFC3999 (ISO-8601) format
          example: '2018-03-01T00:00:00Z'
        time_close:
          type: string
          description: RFC3999 (ISO-8601) format
          example: '2018-03-01T23:59:59Z'
        open:
          type: number
          example: 856.012
          nullable: true
        high:
          type: number
          example: 880.302
          nullable: true
        low:
          type: number
          example: 851.92
          nullable: true
        close:
          type: number
          example: 872.2
          nullable: true
        volume:
          type: integer
          example: 1868520000
          nullable: true
        market_cap:
          type: integer
          example: 83808161204
          nullable: true
    link_with_followers:
      type: object
      properties:
        url:
          type: string
          example: http://example.com
        followers:
          type: integer
          example: 6448
    person_links:
      type: object
      properties:
        github:
          type: array
          items:
            $ref: '#/components/schemas/link_with_followers'
        linkedin:
          type: array
          items:
            $ref: '#/components/schemas/link_with_followers'
        medium:
          type: array
          items:
            $ref: '#/components/schemas/link_with_followers'
        twitter:
          type: array
          items:
            $ref: '#/components/schemas/link_with_followers'
        additional:
          type: array
          items:
            $ref: '#/components/schemas/link_with_followers'
    coin_and_position:
      type: object
      properties:
        coin_id:
          type: string
          example: eth-ethereum
        coin_name:
          type: string
          example: Ethereum
        position:
          type: string
          example: Author
    person_by_id:
      type: object
      properties:
        id:
          type: string
          example: vitalik-buterin
        name:
          type: string
          example: Vitalik Buterin
        description:
          type: string
          example: Vitalik is the creator of Ethereum. He first discovered blockchain and cryptocurrency technologies through Bitcoin in 2011, and was immediately excited by the technology and its potential. He cofounded Bitcoin Magazine in September 2011, and after two and a half years looking at what the existing blockchain technology and applications had to offer, wrote the Ethereum white paper in November 2013. He now leads Ethereum's research team, working on future versions of the Ethereum protocol.
        teams_count:
          type: integer
          example: 5
          description: Number of teams where person is a member
        links:
          $ref: '#/components/schemas/person_links'
        positions:
          type: array
          items:
            $ref: '#/components/schemas/coin_and_position'
    tag:
      type: object
      properties:
        id:
          type: string
          example: blockchain-service
          description: ID of the tag
        name:
          type: string
          example: Blockchain Service
          description: Name of the tag
        coin_counter:
          type: integer
          example: 160
          description: Number of coins with this tag
        ico_counter:
          type: integer
          example: 80
          description: Number of ico projects with this tag
        description:
          type: string
          example: A solution for companies wanting to build, host and use their own blockchain apps, smart contracts and functions on the blockchain.
        type:
          type: string
          example: functional
        coins:
          type: array
          items:
            type: string
          nullable: true
          example:
            - dcr-decred
            - hc-hypercash
            - nxs-nexus
        icos:
          type: array
          items:
            type: string
          nullable: true
          example:
            - kodakcoin-kodakone
            - acad-academy
    quote:
      type: object
      properties:
        price:
          type: number
          example: 6350.17460868
        volume_24h:
          type: number
          example: 3362993497
        volume_24h_change_24h:
          type: number
          example: 0.4
        market_cap:
          type: number
          example: 110327457388
        market_cap_change_24h:
          type: number
          example: 2.3
        percent_change_1h:
          type: number
          example: 0.1
        percent_change_12h:
          type: number
          example: 0.13
        percent_change_24h:
          type: number
          example: -0.26
        percent_change_7d:
          type: number
          example: -2.68
        percent_change_30d:
          type: number
          example: -7.16
        percent_change_1y:
          type: number
          example: -4.05
        ath_price:
          type: number
          example: 20089
        ath_date:
          type: string
          example: '2017-12-17T12:19:00Z'
        percent_from_price_ath:
          type: number
          example: -68.38
    quotes:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/quote'
      example:
        BTC:
          price: 1
          volume_24h: 1414951.9739396
          volume_24h_change_24h: -4.03
          market_cap: 17646575
          market_cap_change_24h: 0.01
          percent_change_15m: 0
          percent_change_30m: 0
          percent_change_1h: 0
          percent_change_6h: 0
          percent_change_12h: 0
          percent_change_24h: 0
          percent_change_7d: 0
          percent_change_30d: 0
          percent_change_1y: 0
          ath_price: null
          ath_date: null
          percent_from_price_ath: null
        USD:
          price: 5162.15941296
          volume_24h: 7304207651.1585
          volume_24h_change_24h: -2.5
          market_cap: 91094433242
          market_cap_change_24h: 1.6
          percent_change_15m: 0
          percent_change_30m: 0
          percent_change_1h: 0
          percent_change_6h: 0
          percent_change_12h: -0.09
          percent_change_24h: 1.59
          percent_change_7d: 0.28
          percent_change_30d: 27.39
          percent_change_1y: -37.99
          ath_price: 20089
          ath_date: '2017-12-17T12:19:00Z'
          percent_from_price_ath: -74.3
    tick:
      type: object
      description: Tick response. Missing values are returned as empty string
      properties:
        id:
          type: string
          example: btc-bitcoin
        name:
          type: string
          example: Bitcoin
        symbol:
          type: string
          example: BTC
        rank:
          type: number
          example: 1
        circulating_supply:
          type: number
          example: 17007062
        total_supply:
          type: number
          example: 17007062
        max_supply:
          type: number
          example: 21000000
        beta_value:
          type: number
          example: 0.735327
        first_data_at:
          type: string
          example: '2010-11-14T07:20:41Z'
        last_updated:
          type: string
          example: '2018-11-14T07:20:41Z'
        quotes:
          $ref: '#/components/schemas/quotes'
    historical_tick:
      type: object
      description: Historical tick response.
      properties:
        timestamp:
          type: string
          description: RFC3999 (ISO-8601) format
          example: '2018-03-01T00:00:00Z'
        price:
          type: number
          example: 855.53
        volume_24h:
          type: integer
          example: 1968587956
        market_cap:
          type: integer
          example: 83761787514
    historical_ticks:
      type: array
      description: Historical tick response.
      items:
        $ref: '#/components/schemas/historical_tick'
    exchange_links:
      type: object
      properties:
        website:
          type: array
          items:
            type: string
          example:
            - https://www.binance.com/
        twitter:
          type: array
          items:
            type: string
          example:
            - https://twitter.com/binance
    exchanges_quote:
      type: object
      properties:
        reported_volume_24h:
          type: number
          example: 794020873
        adjusted_volume_24h:
          type: number
          example: 794020873
        reported_volume_7d:
          type: number
          example: 153060819
          description: 7d reported volume. This value is updated once per day at midnight (UTC). For example, at 2019-04-11 11:00 AM this value is the exchange volume between 2019-04-04 00:00:00 UTC and 2019-04-11 00:00:00 UTC
        adjusted_volume_7d:
          type: number
          example: 153060819
          description: 7d adjusted volume updated once per day at midnight (UTC). See `reported_volume_7d` description for more details
        reported_volume_30d:
          type: number
          example: 301246828
          description: 30d reported volume. This value is updated once per day at midnight (UTC). For example, at 2019-04-11 11:00 AM this value is the exchange volume between 2019-03-12 00:00:00 UTC and 2019-04-11 00:00:00 UTC
        adjusted_volume_30d:
          type: number
          example: 301246828
          description: 30d adjusted volume updated once per day at midnight (UTC). See `reported_volume_30d` description for more details
    exchanges_quotes:
      type: object
      properties:
        $KEY:
          $ref: '#/components/schemas/exchanges_quote'
    exchange:
      type: object
      properties:
        id:
          type: string
          example: binance
        name:
          type: string
          example: Binance
        active:
          type: boolean
          example: true
        website_status:
          type: boolean
          example: true
        api_status:
          type: boolean
          example: true
        description:
          type: string
          example: Binance is a Malta-based cryptocurrency exchange founded in July 2017
          nullable: true
        message:
          type: string
          example: Currently under maintenance
        links:
          $ref: '#/components/schemas/exchange_links'
        markets_data_fetched:
          type: boolean
          example: true
        adjusted_rank:
          type: integer
          example: 1
        reported_rank:
          type: integer
          example: 3
        currencies:
          type: integer
          example: 150
        markets:
          type: integer
          example: 385
        fiats:
          type: array
          items:
            $ref: '#/components/schemas/exchange_fiat'
          example:
            - name: US Dollars
              symbol: USD
        quotes:
          $ref: '#/components/schemas/exchanges_quotes'
        last_updated:
          type: string
          example: '2018-11-14T07:20:41Z'
    market:
      type: object
      properties:
        pair:
          type: string
          example: BTC/USDT
        base_currency_id:
          type: string
          example: btc-bitcoin
        base_currency_name:
          type: string
          example: Bitcoin
        quote_currency_id:
          type: string
          example: usdt-tether
        quote_currency_name:
          type: string
          example: Tether
        market_url:
          type: string
          example: https://www.binance.com/en/trade/BTC_USDT
        category:
          type: string
          example: Spot
        fee_type:
          type: string
          example: Percentage
        outlier:
          type: boolean
          example: false
        reported_volume_24h_share:
          type: number
          example: 30.29
        quotes:
          $ref: '#/components/schemas/market_quotes'
        last_updated:
          type: string
          example: '2018-11-14T07:20:41Z'
    platform:
      type: string
      example: eth-ethereum
    contracts_contract:
      type: object
      properties:
        address:
          type: string
          example: '0xd26114cd6ee289accf82350c8d8487fedb8a0c07'
        id:
          type: string
          example: omg-omisego
        type:
          type: string
          example: ERC20
    id_changelog:
      type: object
      description: ID changelog
      properties:
        currency_id:
          type: string
          example: btc-bitcoin
        old_id:
          type: string
          example: btc-bitcoin123
        new_id:
          type: string
          example: btc-bitcoin456
        changed_at:
          type: string
          description: RFC3999 (ISO-8601) format
          example: '2022-07-15T07:00:00Z'
    ids_changelog:
      type: array
      description: IDs changelog response
      items:
        $ref: '#/components/schemas/id_changelog'
    ico_project:
      type: object
      properties:
        id:
          type: string
          example: fil-filecoin-futures
        name:
          type: string
          example: Filecoin
        symbol:
          type: string
          example: FIL
        is_new:
          type: boolean
          example: false
    exchange_simplified:
      type: object
      properties:
        id:
          type: string
          example: binance
        name:
          type: string
          example: Binance
        rank:
          type: integer
          example: 1
    person:
      type: object
      properties:
        id:
          type: string
          example: vitalik-buterin
        name:
          type: string
          example: Vitalik Buterin
        teams_count:
          type: integer
          example: 5
          description: Number of teams where person is a member
    search_results:
      type: object
      properties:
        currencies:
          type: array
          items:
            $ref: '#/components/schemas/currency'
        icos:
          type: array
          items:
            $ref: '#/components/schemas/ico_project'
        exchanges:
          type: array
          items:
            $ref: '#/components/schemas/exchange_simplified'
        people:
          type: array
          items:
            $ref: '#/components/schemas/person'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/tag_simplified'
    price_converter_response:
      type: object
      properties:
        base_currency_id:
          type: string
          example: btc-bitcoin
        base_currency_name:
          type: string
          example: Bitcoin
        base_price_last_updated:
          type: string
          example: '2019-02-26T13:32:39Z'
        quote_currency_id:
          type: string
          example: usd-us-dollars
        quote_currency_name:
          type: string
          example: US Dollars
        quote_price_last_updated:
          type: string
          example: '2019-02-26T13:33:45Z'
        amount:
          type: number
          example: 100
        price:
          type: number
          example: 386621.99158499995
    tick_deprecated:
      type: object
      description: Tick response. Missing values are returned as empty string
      properties:
        id:
          type: string
          example: btc-bitcoin
        name:
          type: string
          example: Bitcoin
        symbol:
          type: string
          example: BTC
        rank:
          type: string
          example: '1'
        price_usd:
          type: string
          example: '9259.01'
        price_btc:
          type: string
          example: '1'
        volume_24h_usd:
          type: string
          example: '8102619999'
        market_cap_usd:
          type: string
          example: '157468557128'
        circulating_supply:
          type: string
          example: '17007062'
        total_supply:
          type: string
          example: '17007062'
        max_supply:
          type: string
          example: '21000000'
        percent_change_1h:
          type: string
          example: '-0.26'
        percent_change_24h:
          type: string
          example: '0.22'
        percent_change_7d:
          type: string
          example: '4.1'
        last_updated:
          type: string
          example: '1525088839'
  parameters:
    coin_id:
      name: coin_id
      in: path
      required: true
      schema:
        type: string
        example: btc-bitcoin
    coinpaprika_id:
      name: coinpaprika
      in: query
      required: false
      description: |
        Coinpaprika API ID of a coin you want to map to the other provider API IDs
      schema:
        type: string
    coinmarketcap_id:
      name: coinmarketcap
      in: query
      required: false
      description: |
        Coinmarketcap API ID of a coin you want to map to the other provider API IDs
      schema:
        type: string
    coingecko_id:
      name: coingecko
      in: query
      required: false
      description: |
        Coingecko API ID of a coin you want to map to the other provider API IDs
      schema:
        type: string
    cryptocompare_id:
      name: cryptocompare
      in: query
      required: false
      description: |
        Cryptocompare API ID of a coin you want to map to the other provider API IDs
      schema:
        type: string
    isin_id:
      name: isin
      in: query
      required: false
      description: |
        [ISIN](https://www.isin.org/isin-for-cryptocurrency/) ID of a coin you want to map to the other provider API IDs
      schema:
        type: string
    dti_id:
      name: dti
      in: query
      required: false
      description: |
        [Digital Token Identifier](https://www.iso.org/obp/ui/en/#iso:std:iso:24165:-2:ed-1:v1:en) of a coin you want to map to the other provider API IDs
      schema:
        type: string
    quotes:
      name: quotes
      in: query
      required: false
      description: |
        Comma separated list of quotes to return. Currently allowed values:  BTC, ETH, USD, EUR, PLN, KRW, GBP, CAD, JPY, RUB, TRY, NZD, AUD, CHF, UAH, HKD, SGD, NGN, PHP, MXN, BRL, THB, CLP, CNY, CZK, DKK, HUF, IDR, ILS, INR, MYR, NOK, PKR, SEK, TWD, ZAR, VND, BOB, COP, PEN, ARS, ISK
      schema:
        type: string
        default: USD
        example: USD,BTC
    ohlcv_quote:
      name: quote
      in: query
      required: false
      description: 'returned data quote (available values: `usd` `btc`)'
      schema:
        type: string
        default: usd
    ohlcv_start:
      name: start
      in: query
      required: true
      description: |
        start point for historical data
        #### Supported formats:
           - RFC3999 (ISO-8601) eg. `2018-02-15T05:15:00Z`
           - Simple date (yyyy-mm-dd) eg. `2018-02-15`
           - Unix timestamp (in seconds) eg. `1518671700`
      schema:
        type: string
    ohlcv_end:
      name: end
      in: query
      required: false
      description: |
        end point for ohlcv (max 1 year)
        #### Supported formats:
           - RFC3999 (ISO-8601) eg. `2018-02-15T05:15:00Z`
           - Simple date (yyyy-mm-dd) eg. `2018-02-15`
           - Unix timestamp (in seconds) eg. `1518671700`

         If not provided calculated by the limit parameter
      schema:
        type: string
    ohlcv_limit:
      name: limit
      in: query
      required: false
      description: limit of result rows (max `366`)
      schema:
        type: integer
        default: 1
    ohlcv_interval:
      name: interval
      in: query
      required: false
      description: 'returned OHLCV point interval (available values: `5m`, `15m`, `30m`, `1h`, `6h`, `12h`, `24h`)'
      schema:
        type: string
        default: 24h
    person_id:
      name: person_id
      in: path
      required: true
      schema:
        type: string
        example: vitalik-buterin
    additional_fields:
      name: additional_fields
      description: |
        Comma separated list of additional fields to include in query result for each tag. Currently supported values are: "coins" and "icos".
      in: query
      required: false
      schema:
        type: string
        example: coins,icos
    tag_id:
      name: tag_id
      in: path
      required: true
      schema:
        type: string
        example: blockchain-service
    tickers_quotes:
      name: quotes
      in: query
      required: false
      description: |
        Comma separated list of quotes to return. Up to 3 quotes at once. Currently allowed values:  BTC, ETH, USD, EUR, PLN, KRW, GBP, CAD, JPY, RUB, TRY, NZD, AUD, CHF, UAH, HKD, SGD, NGN, PHP, MXN, BRL, THB, CLP, CNY, CZK, DKK, HUF, IDR, ILS, INR, MYR, NOK, PKR, SEK, TWD, ZAR, VND, BOB, COP, PEN, ARS, ISK
      schema:
        type: string
        default: USD
        example: USD,BTC
    historical_start:
      name: start
      in: query
      required: true
      description: |
        start point for historical data
        #### Supported formats:
           - RFC3999 (ISO-8601) eg. `2018-02-15T05:15:00Z`
           - Simple date (yyyy-mm-dd) eg. `2018-02-15`
           - Unix timestamp (in seconds) eg. `1518671700`
      schema:
        type: string
    historical_end:
      name: end
      in: query
      required: false
      description: |
        end point for historical data
        #### Supported formats:
         - RFC3999 (ISO-8601) eg. `2018-02-15T05:15:00Z`
         - Simple date (yyyy-mm-dd) eg. `2018-02-15`
         - Unix timestamp (in seconds) eg. `1518671700`
      schema:
        type: string
        default: NOW
    historical_limit:
      name: limit
      in: query
      required: false
      description: limit of result rows (max `5000`)
      schema:
        type: integer
        default: 1000
    historical_quote:
      name: quote
      in: query
      required: false
      description: 'returned data quote (available values: `usd` `btc`)'
      schema:
        type: string
        default: usd
    historical_interval:
      name: interval
      in: query
      required: false
      description: 'returned points interval (available values: `5m` `10m` `15m` `30m` `45m` `1h` `2h` `3h` `6h` `12h` `24h` `1d` `7d` `14d` `30d` `90d` `365d`)'
      schema:
        type: string
        default: 5m
    exchange_id:
      name: exchange_id
      in: path
      required: true
      schema:
        type: string
        example: binance
    platform_id:
      name: platform_id
      in: path
      required: true
      schema:
        type: string
        example: eth_ethereum
    contract_address:
      name: contract_address
      in: path
      required: true
      schema:
        type: string
        example: '0xd26114cd6ee289accf82350c8d8487fedb8a0c07'
    page:
      name: page
      in: query
      required: false
      description: |
        Results page number. The number of records in the response is 100
      schema:
        type: number
        default: 1
        example: 2
    search_query:
      name: q
      in: query
      required: true
      description: phrase for search eg. `btc`
      schema:
        type: string
    search_category:
      name: c
      in: query
      required: false
      description: 'one or more categories (comma separated) to search. Available options: `currencies|exchanges|icos|people|tags`'
      schema:
        type: string
        default: currencies,exchanges,icos,people,tags
    search_modifier:
      name: modifier
      in: query
      required: false
      description: 'set modifier for search results. Available options: `symbol_search` - search only by symbol (works for currencies only)'
      schema:
        type: string
    search_limit:
      name: limit
      in: query
      required: false
      description: limit of results per category (max 250)
      schema:
        type: integer
        default: 6
    converter_base_currency_id:
      name: base_currency_id
      in: query
      required: true
      schema:
        type: string
    converter_quote_currency_id:
      name: quote_currency_id
      in: query
      required: true
      schema:
        type: string
    converter_amount:
      name: amount
      in: query
      required: false
      schema:
        type: integer
        default: 0
